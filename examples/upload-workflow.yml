# Example GitHub Actions workflow for uploading packages to ADB APT Repository
# Copy this workflow to your repository's .github/workflows/ directory
#
# Required Secret: APT_REPO_TOKEN
# Create a fine-grained personal access token with these permissions:
# - Repository access: adb-apt-repo
# - Contents: Write, Metadata: Read

name: Upload to APT Repository

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      package_path:
        description: 'Path to the .deb package'
        required: true
        default: '*.deb'
      distribution:
        description: 'Target distribution'
        required: false
        default: 'stable'
        type: choice
        options:
          - stable
          - testing
      component:
        description: 'Target component'
        required: false
        default: 'main'
        type: choice
        options:
          - main
          - contrib

jobs:
  upload-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Find package file
      id: find-package
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          PACKAGE_PATH="${{ github.event.inputs.package_path }}"
        else
          # For release events, look for .deb files in common locations
          PACKAGE_PATH=$(find . -name "*.deb" | head -1)
        fi
        
        if [ -z "$PACKAGE_PATH" ] || [ ! -f "$PACKAGE_PATH" ]; then
          echo "Error: No .deb package found"
          exit 1
        fi
        
        echo "package_path=$PACKAGE_PATH" >> $GITHUB_OUTPUT
        echo "package_name=$(basename $PACKAGE_PATH)" >> $GITHUB_OUTPUT

    - name: Upload to APT Repository
      env:
        APT_REPO_TOKEN: ${{ secrets.APT_REPO_TOKEN }}
      run: |
        PACKAGE_FILE="${{ steps.find-package.outputs.package_path }}"
        PACKAGE_NAME="${{ steps.find-package.outputs.package_name }}"
        DISTRIBUTION="${{ github.event.inputs.distribution || 'stable' }}"
        COMPONENT="${{ github.event.inputs.component || 'main' }}"
        
        echo "Uploading package: $PACKAGE_NAME"
        echo "Target: $DISTRIBUTION/$COMPONENT"
        
        # Clone the APT repository
        git clone https://x-access-token:$APT_REPO_TOKEN@github.com/adambirds/adb-apt-repo.git apt-repo
        cd apt-repo
        
        # Set up git config
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        
        # Create target directory if it doesn't exist
        mkdir -p "incoming/$DISTRIBUTION/$COMPONENT"
        
        # Copy the package to the appropriate directory
        cp "../$PACKAGE_FILE" "incoming/$DISTRIBUTION/$COMPONENT/"
        
        # Commit and push
        git add "incoming/$DISTRIBUTION/$COMPONENT/"
        git commit -m "feat: Add $DISTRIBUTION/$COMPONENT package $PACKAGE_NAME."
        git push
        
        echo "âœ… Package $PACKAGE_NAME uploaded successfully to $DISTRIBUTION/$COMPONENT!"
        echo "The package will be processed and added to the repository automatically."
